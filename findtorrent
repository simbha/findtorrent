#!/usr/bin/env python2

import os
import sys
import argparse
import urllib
import urllib2
import gzip
import string
from configobj import ConfigObj
from StringIO import StringIO

plugin_dir = sys.path[0] + "/plugins"
sys.path.append(plugin_dir)


def load_config():
    config_file = os.environ["XDG_CONFIG_HOME"]\
        + "/findtorrent/findtorrent.conf"
    try:
        conf = ConfigObj(config_file, file_error=True)
    except IOError:
        if not os.path.exists(config_file.replace("/findtorrent.conf", "")):
            os.makedirs(config_file.replace("/findtorrent.conf", ""))
        conf = ConfigObj()
        conf.filename = config_file
        conf["download_dir"] = os.environ["HOME"]
        conf["default_plugin"] = "isohunt"
        conf.write()

    return conf


def get_args():
    parser = argparse.ArgumentParser(description='Find and download torrent \
                                                  files from various torrent \
                                                  sites')
    parser.add_argument('--plugin',
                        metavar='plugin',
                        default=conf['default_plugin'],
                        help='plugin')
    parser.add_argument('--max-items',
                        metavar='max_items',
                        default=-1,
                        help='maximum number of results')
    parser.add_argument('keywords',
                        metavar='keywords',
                        nargs='?',
                        default='',
                        type=str,
                        help='search')
    args = vars(parser.parse_args())

    plugin = args['plugin']
    max_items = int(args['max_items'])

    if (args['keywords'] == ''):
        try:
            keywords = raw_input('Enter search terms: ')
        except KeyboardInterrupt:
            print ""
            sys.exit()
    else:
        keywords = args['keywords']

    return plugin, max_items, keywords


class colors:
    INDEX = '\033[90m'
    NAME = '\033[94m'
    SIZE = '\033[92m'
    FILES = '\033[93m'
    SEED = '\033[91m'
    LEECH = '\033[95m'
    HEADER = '\033[90m'
    ENDC = '\033[0m'

    def disable(self):
        self.INDEX = ''
        self.NAME = ''
        self.SIZE = ''
        self.FILES = ''
        self.SEED = ''
        self.LEECH = ''
        self.HEADER = ''
        self.ENDC = ''


def print_items(items, index, max_items):
    rows, columns = os.popen('stty size', 'r').read().split()
    left = "#   Name"
    right = "Size       Files  Seed  Leech"
    print colors.HEADER\
        + left\
        + (int(columns) - len(left) - len(right)) * " "\
        + right\
        + colors.ENDC
    print int(columns) * "-"
    i = 1
    while (i < index):
        if (max_items != -1 and i > max_items):
            break
        left = string.ljust(str(i) + ".", 4) + items[i]["name"]
        right = string.ljust(items[i]["size"], 11)\
            + string.ljust(items[i]["files"], 7)\
            + string.ljust(items[i]["seed"], 6)\
            + string.ljust(items[i]["leech"], 5)
        print colors.INDEX + string.ljust(str(i) + ".", 4)\
            + colors.NAME + items[i]["name"]\
            + (int(columns) - len(left) - len(right)) * " "\
            + colors.SIZE + string.ljust(items[i]["size"], 11)\
            + colors.FILES + string.ljust(items[i]["files"], 7)\
            + colors.SEED + string.ljust(items[i]["seed"], 6)\
            + colors.LEECH + string.ljust(items[i]["leech"], 5)\
            + colors.ENDC
        i += 1


def download_file(url, file):
    request = urllib2.Request(url)
    request.add_header('Accept-encoding', 'gzip')
    response = urllib2.urlopen(request)
    if response.info().get('Content-Encoding') == 'gzip':
        buf = StringIO(response.read())
        f = gzip.GzipFile(fileobj=buf)
        file = open(file, "wb")
        file.write(f.read())
        file.close
    else:
        urllib.urlretrieve(url, file)


if __name__ == "__main__":
    conf = load_config()
    plugin, max_items, keywords = get_args()

    exec 'import %s' % plugin

    exec 'items, index = %s.search(keywords)' % plugin
    print_items(items, index, max_items)

    try:
        for url_index in string.split(raw_input("\nEnter torrent number: "), ","):
            url = items[int(url_index)]["url"]
            download_file(url, conf["download_dir"] + "/" + url.split('/')[-1])
    except KeyboardInterrupt:
        print ""
        sys.exit()
